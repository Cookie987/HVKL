<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Image3d1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vgAADr4B6kKxwAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAABtrSURBVHhe7d0L
        kCR3fdjxvafutM+TTpIFAks3uwdBWKFKMU6CHYMVkpgqEpJYRezgopKyygai0+3t+04q1oa7nTlRkCgu
        lwU4jmyDwtkRVSmCsVGCDQ6yKRspiWXAAiPMyyUUWbe7M7unx/3TfWpZ0tz/TjN7MzvdPZ9P1bcE2tds
        U/x//+6Z7RkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        oDcqt4fL99fCa8dr4Z+OL4V/O7EUZpL/XE2rLIX/MFELd45XwwfS/5587L3Jfz5UqYW3J/9888Tx8JqX
        L4U92bcCAPLmFbUwvK8Wbjgz4JfCryUD/P6kelLoQCeT/ijZJHwo6WDlWHjd1YthV/ajAYDNctX7w+5K
        Nfx4ehafDOcvJj2VDevN6lTSfclm41jS66+/M+zIHhoA0En7qmE0vTyfDP5PJMO38bxhnIdWkj6WbAZu
        vO72MJg9ZABgQxbD1vRMf6Ia7kkG7PrzBm6eS596uCt5zP9gIIQt2W8CALyY9Dn9ZIDOJmfUDzcN16L1
        laR3XbsYhrJfDQBodu37wyXJ0F9MhuZjzxuiZeix9PUC+98X9ma/KgBwzdFwRaUWjieDcrlpcJat5XQj
        kG50sl8dAPrPtYthZzIUDyd16k/2itL/m6iGW/z1AAB9p7IUfiwZhF9qGox9VaUavpweh+yQAEB5XX08
        fN/4MzfrOd08EPu2Wjjh9QEAlNZENfxUMvAeP2sAKr0a8J3KUvgn2aECgOJL79yXDLkPNg89ndXpZJN0
        h1sNA1B4+46F/clge6Bp0On8ffEVt4drskMIAMUyXgv/Ohlm6W1yY0NO5+/RiVp4Y3YoAaAYxpfCXGSo
        qb2eSjZR78wOKQDk2GLYmgyuX2waZLqwlryvAAC5ld7YZ6Ia7o4MMF14H0w3V9mhBoB8SN/Ap1INn44M
        LnWqpfAbr18M27NDDgC9ld3S93fPGljqRr/pFsIA9N6JsC0dSk1DSt3NJgCA3kpvXBMZUOp+NgEA9Eal
        Gt4TGUzavGwCANhcyfC/KTKQtPl9zAsDAdgU+6rhB5LB02gaROpdrgQA0F3XLoahZOD09fv45zSbAAC6
        Jxk0v940eJSfbAIA6LyJavjZyNBRvrIJAKBzsrf1XWsaNspnXhgIQGckQ+WTTUNG+c6VAAAuTGUpvDUy
        YJT/bAIA2Jj0TX6SQfKtpsGi4mQTAED7kgHy/qaBouJlEwBA68aPhVclw+PJpmGiYuaFgQC0JhkaH2ka
        Iip2rgQAcH7jx0MlGRjO/suXTQAA55YMig83DQ6VJ5sAAM42XgtXJUPiVNPQULmyCQDghSaq4Y7IwFD5
        sgkA4BnZ3/2vNA0KlTebAADOPPf/jqYBofJnEwDQ75Jh8MWm4aD+yH0CAPpV5Wh4dWQwqH9yJQCgH1WW
        wi9EhoL6K5sAgH5TqYYvRwaC+i9PBwD0i33Hwv7IIFD/5koAQD8Yr4WDkSGg/s4mAKDsksX+U02Lv5Tm
        6QCAskoX+GShd/MfnStXAgDKqLIUro8s+tLzswkAKJtKNdwcWfCl5jwdAFAmycJ+V9NCL50rVwIAyiJZ
        1O9vWuSl82UTAFB02QsA15sWeOnFsgkAKLLKUhiPLO5SK9kEABTV/qXwDyMLu9RqNgEARTS+FH4msqhL
        7WQTAFA047Xw7siCLrWbPxEEKJJk4f7FpoVc2miuBAAUxUQ13B1ZyKWNZhMAUATjtfDbkUVcupA8HQCQ
        d8li/ZmmxVvqRK4EAORZslD/r6aFW+pUNgEAeTVRDV+ILNxSp/J0AEAeJQv0fU0LttTpXAkAyJtkcf79
        psVa6kY2AQB5kizMv9u0UEvdytMBAHmRLMq/2bRIS93MlQCAPJiohTsji7TUzWwCAHptfCkciyzQUner
        hROeDgDooUo13BxdoKXu50oAQK8ki/CbmxZlaTOzCQDohWtuD9dFFmVpM7MJANhsV70/7E4W4KeaFmRp
        s7MJANhsyeL7UNNiLPUimwCAzTRRDfdEFmOpF9kEAGyWZANwa2QhlnqVTQDAZqgshR+LLMJSL7MJAOi2
        624Pg8mC+2TTAiz1OpsAgG6bqIYvRBZgqbe5YyBAd00shfdGF2Cp97kSANAt+4+HH4ksvFJesgkA6IoT
        YVuyyD7StOhKecomAKAbxmvhQ5FFV8pTNgEAnZYsrv+4abGV8pcXBgJ0VrqoJgvst89acKX85UoAQCcl
        C+tS00Ir5TWbAIBO2Xc8TCQL6+mmhVbKZ54OAOicZGH95FkLrZTffsuVAIAOmKiFN0YWWSnP2QQAXLAQ
        tiQL6v9pWmClfOfpAIALN74UbowuslK+cyUA4II8cxXggabFVSpCNgEAF6JSC2+JLK5S/vN0AMCFqVTD
        p6MLrJT/XAkA2KiJ4+E1yUL6dNPCKhUlmwCAjUoW0V9qWlSl4uTpAICNGV8MI8lC+s2zFlapOLkSALAR
        XhCowudKAMDGVKrhV6MLq1ScXAkAaNd1t4fBZAH986YFVSpaNgEA7dpfC69NFtD1pgVVKlaeDgBo38RS
        +LnooioVK1cCANqVLJ7/qWkxlYqXKwEA7UnPnCaq4d7ooioVK1cCANqxrxpGkzOo/xtZUKWiZRMA0I7K
        e8PLKtXw9ciCKhUtmwCAdlSWwniyCfhOZEGVipZNAEA7KkfDq5PF85GmxVQqXl4YCNCe/cfCK5MF9Ltn
        LahS8XIlAKAdNgEqUTYBAO2wCVCJsgkAaIdNgEqUTQBAO2wCVKJsAgDaYROgEmUTANAOmwCVKJsAgHbY
        BKhE2QQAtMMmQCXKJgCgHTYBKlE2AQDtsAlQibIJAGiHTYBKlE0AQDtsAlSibAIA2pFuAryVsEqSTQBA
        O2wCVKJsAgDaYROgEmUTANAOmwCVKJsAgHbYBKhE2QQAtMMmQCXKJgCgHTYBKlE2AQDtsAlQibIJAGiH
        TYBKlE0AQDtsAlSibAIA2mEToBJlEwDQDpsAlSibAIB22ASoRNkEALTDJkAlyiag165dDDuvPh6+b/9S
        2Jf8D3JtZSlcLynH1cLbk/+vnnreQioVs1o48frFsD0bR3RcCFtecXu4JjnYb04O9kLyz1+ZqIZ7k38+
        lLRy5n8ESZJ6kU1A54zfES7aVws3JAf13Um/nRzgvz7rgEuSlJdsAjbubx0NVyYH8V0TtfDfk3/WX3Bg
        JUnKezYBrbv6A2EsOWjvmKiGzyX/fPoFB1KSpKJlE3B+48fC3xtfCr+WHKzGWQdPkqQiZxPQ5ETYVlkK
        b00Ozh+edbAkSSpTNgGJxbA1Odu/MTkgXzrrAEmSVN769z4B+46FNyUH4MGmAyJJUn/Ub1cCxo+FVyW/
        +O+cdSAkSeq3+mETkF7qGF8Kc8kvvH7WAZAkqX8r79MB+2vhtckv6Hl+SZJile5KwImwLTvrd19vSZLO
        XzmuBKRvwFNZCp+N/IKSJClW0a8EVI6F13lLT0mSNlQxrwRM1MK/SR78E02/jCRJarVCXQkIYcv4UliM
        /iKSJKndCnAlIL2VbzX8auTBS5KkjZbrKwHPvNI/ffOe+IOXJEkXUv6uBKS7kolquCfyYCVJUqeqhf+S
        nnBn47fH0jfyqYaPnPUgJUlSN7ornb3ZFO6d5IF8sOmBSZKkbrYU/mM2hntjohZuiz4wSZLU1SpLYSob
        x5urUg3/KnkAp5sfkCRJ2pSenlgK/zIby5sj2XVcn/zgtaYHIkmSNrfVfdXwA9l47q6XL4U9yQ/8WtMD
        kCRJvemhqz8QxrIx3SUhbKlUwyciP1ySJPWuj2eTujuS4X9z5IdKkqQel8zom7Jx3Vn7j4VXJj+g3vwD
        JUlSLlrddyzsz8Z2hzxzs58/bPpBkiQpR01Uw+c6epOgSi38u9gPkiRJ+SrZBPxsNr4vzCtq4SXJNzzZ
        /AMkSVIue/yao+GKbIxvXPKN7mr6xpIkKc/VwoeyMb4x+6vhbyff6OmzvrEkScpzT6c37cvGefsmquHe
        yDeVJEn571PZOG9PpRr+fuSbSZKkgrT/ePiRbKy3LtkAfDr2zSRJUjFKZ3k21lszcSz8UOwbSZKkYrWv
        Fv5ONt5f3EQ13B37JpIkqXB9JBvv55f93f8TTV8sSZKK2RPjtXBVNubPLTn7vzXyxZIkqaBN1MJt2Zg/
        t+QTH2z+QkmSVNwq1fD1875HwMTx8JrYF0qSpGJXqYU3ZOP+bMkHj8e+SJIkFbuJWrgzG/dNQtiSXiKI
        fZEkSSp833v9YtieTf3npHcLinyyJEkqSdGnAcZroRr7ZEmSVI4q1VDLxv5zkg3A52OfLEmSStP92dh/
        xksWw8XJvzzV9EmSJKlcnb7maLgiG/8DA/tq4YbIJ0mSpJJVWQr/PBv/Z27+8/PNnyBJkspX+if/2fg/
        swH4n82fIEmSytdENXwuG/9nNgCPNX+CJEkqZY+n9/4Z2P++sDfyQUmSVNIq7w0vS//87+/GPihJkspZ
        pRp+PN0A/HTsg5IkqaTVwjsHKkvhF6IflCRJpezMHQErtfDR2AclSVJp+1j6FwD/o+lfSpKkcveZdAPw
        R03/UpIklbiJpfC/0w3Ag80fkCRJpe5b6QbgG03/UpIklbvH3AVQkqT+q55uAJ5o+peSJKncPTWw5ebH
        w4AkSeqfDiRtPXDydPSDkiSplG05cDIMbD+4/GTsg5IkqZydOfnfMbm8HvugJEkqZ9tuWX5qYOeh5dXY
        ByVJUjnbMbnSGNg1tfJY7IOSJKmcnZn9u6dXH459UJIklbPdM6vfGBiaXf1s7IOSJKmcDc3W7xsYXlj7
        5dgHJUlSORuZa9w9MDq/9jOxD0qSpHI2Mrd268BlM+sTsQ9KkqRytve2+vUDKXcDlCSpPzoz85/lTwEl
        SeqPLjq08ng2/gfSvwT4vdgnSZKkcjU0U/98Nv4HBsbmG1OxT5IkSeXqzAsAnzWyePISbwssSVK5S2f9
        pUcaL83G/zN2Hlpejn2yJEkqRzsnl1ezsf+cM88JRD5ZkiSVoxc8//+s0fn1n4t9siRJKkd7Dq+9LRv7
        z7MYtm4/uPxk7AskSVKxOzPjk1mfTf0XOvPmAJEvkiRJxW5wtv4n2bg/2yXzjRtjXyRJkordmaf6z2fH
        5Mp67AslSVIx2zG5fOqcl/+fNTRX/3TsiyVJUjEbnqnfk435c7vs8BOvcVMgSZLK0ZYDJ8Plt65XsjF/
        frunVr8e+yaSJKlY7Z6uP5SN9xc3trD207FvIkmSitXYQv0t2Xhvza6plUdj30iSJBWj3dOr38zGeutG
        59Zuin0zSZJUgA48Hs78ef9GuAogSVIx2z21+p1snLdvdKHxE+kOIvaNJUlSPkv/mm9sofEvsnG+Mbun
        V78S++aSJCmfDc7W/zgb4xu35/Cp67YeOHk69gMkSVK+2nbLyacvOdJ4WTbGL8zIbOOjsR8iSZLy1ehc
        /cPZ+O6AxbB956Hl5dgPkiRJ+WjX9MqjL3rP/3aNHV57g6cCJEnKZ+mMvnS68UPZ2O6skbnG3bEfKkmS
        etvIQuOObFx3wWLYunt69buxHyxJknpTMpu/kU3q7hk7svb92w8uPxF7AJIkaXNL3+v/0iONl2Zjursu
        OdJ4a/r2grEHIkmSNqf0ef/R2bUbsvG8OUbnG++LPRhJkrQ5jcyvvTsby5traLb+qdgDkiRJ3W14rv7x
        bBz3xuDM6oOxByZJkrrT0Ez9D7Ix3EPP/GWA9wuQJGkTSk68/zSbwL139WLYlWwCvh17oJIkqTMls/bh
        9O682fjNicWw8+Lp+ldjD1iSJF1YyfD/ZnrCnU3dnEk2AYMzq1+OPXBJkrSxdk+t/mV+h//zDM/U7xk4
        EP8lJElS6+X7zD9ieGHtl7fYBEiStOEKc+bfbM/htbdtP7j8ZOyXkiRJ565wZ/7NLlk49apdUyuPxX45
        SZJ0doU98z/LYtiavi5gS+SXlCRJz1X4M/+YPYfXfmrH5Mp67BeWJKnfK8+Zf8RLFsPFw3P1T3qBoCRJ
        z1XKM/+Y0fn1f7RrauWvYgdBkqR+qtRn/ucyOt+Y2zG5shY7IJIklb2+HP5/YzFsHVuov2fn5EojdnAk
        SSpjfXPZ/0Uthu2j843jF02unIwdKEmSylJ/n/mfx9jC2tt3T9cf2nLgZPTASZJU1Az/Fuw9Wr9yZLb+
        n8/cTMhfDkiSCp7hvwGXLpx65fBc49eTg/fdrQdOno4dWEmS8prh3wHpARyZr79zaK7+O8kB/attt5x8
        OnawJUnKQ4Z/F106X//B0bm1w8Nz9U8Mzqw+uGt65ZEdk8vrrhZIknqZ4d9Li2H73sX1/WO3rf3o2OG1
        N6TvVCgpvw3P1z/k/UNUhgx/gBbtWVh/07aDntZT8fN3/gAtMvxVlgx/gBYZ/ipLhj9Aiwx/lSXDH6BF
        hr/KkuEP0CLDX2XJ8AdokeGvsmT4A7TI8FdZMvwBWmT4qywZ/gAtMvxVlgx/gBYZ/ipLhj9Aiwx/lSXD
        H6BFhr/KkuEP0CLDX2XJ8AdokeGvsmT4A7TI8FdZMvwBWmT4qywZ/gAtMvxVlgx/gBYZ/ipLhj9Aiwx/
        lSXDH6BFhr/KkuEP0CLDX2XJ8AdokeGvsmT4A7TI8FdZMvwBWmT4qywZ/gAtMvxVlgx/gBYZ/ipLhj9A
        i8bm6v/M8FcZ2j21+peGP0ALRmfXbth2i+Gv4ufMH6BFe46s/fD2g8tPxRZTqUg58wdo0eW3rld2TC6f
        ii2mUpFy5g/QossWw9CuqZXHYoupVKQMf4A2XDxd/2psMZWKlMv+AG0YmWuciC2mUpFy5g/QhtG5tZu2
        RBZTqUg58wdowyVHGi/bfnD5ydiCKhUlZ/4Abdo9tfK12IIqFSXDH6BNo/ON47EFVSpKLvsDtOnSI42X
        brvFzX5U3Jz5A2zAxTOrD8YWVakIOfMH2IA9842fjC2qUhFy5g+wQRcdWnk8trBKec/wB9ggL/xTUXPZ
        H2CjFsP2HZMra7HFVcpzzvwBLsDIQuOO2OIq5TnDH+BCLIatzv5VtFz2B7hAI3Nrt8YWWCmvOfMH6IBd
        Uyvfiy2yUh4z/AE6YPTw+hsHDsQXWilvuewP0CFDs/X7YgutlLec+QN0SLqYuue/ipDhD9BBXvynImT4
        A3TY4PTqV2ILrpSXDH+ADnvm8v/Jp2OLrpSHvOAPoAvG5ho3xxZdKQ858wfokqGZ+h/EFl6p1xn+AF20
        c3J5Nbb4Sr3MZX+ALtp7tH6lm/8obznzB+iy0bnGbGwBlnqV4Q+wCYZmG/fGFmGpF7nsD7BJkrOtb8cW
        Ymmzc+YPsIm2Ty4/EVuMpc3M8AfYRMNTy3tji7G0mRn+AJtsdKHxE7EFWdqsDH+AHhhbqL8ntihLm5Hh
        D9AjI3ONE7GFWep2hj9ADw3N1D8fW5ylbuZP/QB6bHBm9c9iC7TUrZz5A+RAshh/K7ZIS93I8AfIiV3T
        K4/GFmqp07nsD5AjFx1a+evYYi11Mmf+ADmzc2p5ObZgS53K8AfIoZ2Ty6uxRVvqRC77A+TUzkOuAKg7
        OfMHyLGLprwGQJ3P8AfIuV1TK9+LLeDSRnPZH6AAkjO1h2OLuLSRnPkDFMTg9OoDsYVcajfDH6BAhmYa
        n4kt5lI7uewPUDAjc/W7Ygu61GrO/AEKaHSuMRtb1KVWMvwBCmrs8NobYgu79GIZ/gBFthh2bjlwMrrA
        S+fK8AcogZ2TK/XYIi/FMvwBSmL3dP2h2EIvNWf4A5TIyFzjRGyxl56fP/UDKJk9842fjC340rM58wco
        o8Wwc+uBk6djC79k+AOU2K7plUdii7/6O5f9AUpueK7xX2MDQP2bM3+APjB6eP2NsSGg/szwB+gjOw4u
        r8eGgforl/0B+szQ7OrvxQaC+idn/gB9aM/C+ptiQ0H9keEP0MfcFrg/c9kfoM+NzDd+IzYgVN6c+QMw
        sPdo/Uo3BeqfnPkD8DcGZ+v3x4aFypUzfwBe4NL5+g9uORAfGipHhj8AUYPTq1+KDQ4VP8MfgHMau23t
        R7dEhoeKneEPwItKhsVfxIaIipnhD0BL0hsDeS1AOfJqfwDaMjhT/0JsoKg4OfMHoG3DU8t7tx9cfjI2
        WJT/DH8ANmx0vvG+2HBRvjP8Abhguw+tPBIbMspnhj8AHTE6u3bDlgMno8NG+coL/gDoqJG5+l2xgaP8
        5MwfgK7YPbXytdjgUe8z/AHomisWVy7fcXB5PTaA1LsMfwC6bmyh/havB8hPhj8Am2Z0rv4rsWGkzc0L
        /gDYdEMzjc/EhpI2J2f+APTM4Gz9/thwUncz/AHorcWwPb0MHRtS6k6GPwC5cNliGNo1tfJobFipsxn+
        AOTK5YdXr9g1bRPQzZLh/xeGPwC5k14JSIbUw7HhpQvr4pnVB9OnW7JDDQA5kwypwenVB2JDTBtraLb+
        ueS4bs2OMADk1/Bc/ZMDB+IDTa21JWlkrvGR7JACQDEkw+vfbz1w8nRsuOn8bbvl5NNj843J7FACQLHs
        ObL2wzsPLa/Ghpzi7ZxcqQ/f1nhddggBoJjGDoaxwZnVP40NOz2vA4+Hwdn6H++dDcPZoQOA4huZa3xg
        6y2eEoi17Zblp0bnGzPZoQKActlz+NR16c1sYkOwL0vO+ndPrXztspn1iewQAUB5JWe7x7cfXH4yOhT7
        pB2TK+t7DtfflR0SAOgPI4snLxmabdy75cDJ6IAsa+kr/EfmGne7qx8AfW3P4VOvTt9VcEvJ7xuQ/knk
        0Nzq7++ZW3t59qsDAHtvq18/OF3/YtnuHXBm8M+ufnZ0fn1f9qsCAM3Gjqx9f3onwaK/RmDH5PKpkdnG
        R4enlvdmvxoA8KIWw/bR+bWF9K8GivL0QHq2v3tm9c9HF+rvyH4LAGCj9h6tXzmysPZLyWbgu3l70eCZ
        oT+9+vDwXKOWvrAxe8gAQCeldxYcnW/MpXfNS28znL5pTmwwd6v0akTyc5fT5/VH5urv8mp+AOiBKxZX
        Lh873Jgcnqn/t4un619N76XfqRcSpt8nHfaD06tfSs7wf2t0bu0mt+oFgBxL76635/Da28YW6u8Znat/
        ON0gDM3UPz80W78vGegPDM6s/tngbP1P0v+ens0Pz9Y/Pjxfv3Nsbu3nR+cbN14y27gq+1YAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAoQwM/H/tEzJcM/z24wAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>